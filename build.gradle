import com.android.build.gradle.internal.tasks.AndroidTestTask

buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:2.2.3'
    classpath 'com.google.gms:google-services:3.0.0'
    classpath 'com.jakewharton:butterknife-gradle-plugin:8.4.0'
    classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
    classpath 'com.uber:okbuck:0.13.1'
  }
}

apply plugin: 'com.uber.okbuck'

allprojects {
  repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}

apply from: 'dependencies.gradle'

project.ext.preDexLibraries = project.hasProperty('dev')

subprojects {

  plugins.apply('checkstyle')

  task('checkstyle', type: Checkstyle) {
    configFile rootProject.file('checkstyle.xml')
    source 'src/main/java'
    ignoreFailures false
    showViolations true
    include '**/*.java'

    classpath = files()
  }

  afterEvaluate {
    project.plugins.whenPluginAdded { plugin ->
      if ("com.android.build.gradle.AppPlugin".equals(plugin.class.name)) {
        project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibraries
      } else if ("com.android.build.gradle.LibraryPlugin".equals(plugin.class.name)) {
        project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibraries
      }
    }

    tasks.findByName('check').dependsOn('checkstyle')

    // The default 'assemble' task only applies to normal variants. Add test variants as well.
    android.testVariants.all { variant -> tasks.getByName('assemble').dependsOn variant.assemble
    }

    tasks.withType(AndroidTestTask) { task ->
      task.doFirst {
        logging.level = LogLevel.INFO
      }
      task.doLast {
        logging.level = LogLevel.LIFECYCLE
      }
    }
  }
}